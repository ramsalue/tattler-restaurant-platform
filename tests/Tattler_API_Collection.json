{
	"info": {
		"_postman_id": "fb79ea6b-9eae-43fb-9c09-6e270bce22e8",
		"name": "Tattler Restaurant API - Sprint 2",
		"description": "Challenge 04 - Sprint 2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "48954560",
		"_collection_link": "https://ramsalue-5809832.postman.co/workspace/Luis-E.-Ramirez-(ramsalue)'s-Wo~cdc23105-5285-4ecc-85bf-8776dac31a99/collection/48954560-fb79ea6b-9eae-43fb-9c09-6e270bce22e8?action=share&source=collection_link&creator=48954560"
	},
	"item": [
		{
			"name": "Health & Info",
			"item": [
				{
					"name": "Health Check",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has success status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"success\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/health",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "API welcome",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Restaurants",
			"item": [
				{
					"name": "Get All restaurants",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// This part of the script gets the response data, finds the ID of the first restaurant,\r",
									"// and saves it to the 'restaurant_id' variable in the active environment.\r",
									"pm.test(\"Save first restaurant ID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    if (jsonData.data.restaurants.length > 0) {\r",
									"        pm.environment.set(\"restaurant_id\", jsonData.data.restaurants[0]._id);\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/restaurants",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"{{api_version}}",
								"restaurants"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get restaurant by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/restaurants/{{restaurant_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"{{api_version}}",
								"restaurants",
								"{{restaurant_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new restaurant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Restaurant was created and ID saved\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.restaurant).to.have.property('_id');\r",
									"    // This overwrites the 'restaurant_id' with the one we just created.\r",
									"    pm.environment.set(\"restaurant_id\", jsonData.data.restaurant._id);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Test Restaurant via Postman\",\r\n  \"cuisine\": \"Italian\",\r\n  \"location\": {\r\n    \"address\": \"456 Test Street\",\r\n    \"city\": \"Test City\",\r\n    \"coordinates\": {\r\n      \"latitude\": 20.0,\r\n      \"longitude\": -100.0\r\n    }\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/restaurants",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"{{api_version}}",
								"restaurants"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update restaurant",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Updated Test Restaurant Name\",\r\n  \"priceRange\": \"$$$\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/restaurants/{{restaurant_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"{{api_version}}",
								"restaurants",
								"{{restaurant_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete restaurant",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/restaurants/{{restaurant_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"{{api_version}}",
								"restaurants",
								"{{restaurant_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Ratings",
			"item": [
				{
					"name": "Get Restaurants ratings",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/restaurants/{{restaurant_id}}/ratings",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"{{api_version}}",
								"restaurants",
								"{{restaurant_id}}",
								"ratings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create rating",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Rating was created and ID saved\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.rating).to.have.property('_id');\r",
									"    pm.environment.set(\"rating_id\", jsonData.data.rating._id);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userId\": \"testuser001\",\r\n  \"rating\": 5,\r\n  \"review\": \"Excellent food and service! Highly recommended.\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/restaurants/{{restaurant_id}}/ratings",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"{{api_version}}",
								"restaurants",
								"{{restaurant_id}}",
								"ratings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update rating",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"rating\": 4,\r\n  \"review\": \"Updated review: Still great but slightly expensive\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/restaurants/{{restaurant_id}}/ratings/{{rating_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"{{api_version}}",
								"restaurants",
								"{{restaurant_id}}",
								"ratings",
								"{{rating_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete rating",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/restaurants/{{restaurant_id}}/ratings/{{rating_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"{{api_version}}",
								"restaurants",
								"{{restaurant_id}}",
								"ratings",
								"{{rating_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Comments",
			"item": [
				{
					"name": "Get restaurants comments",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/restaurants/{{restaurant_id}}/comments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"{{api_version}}",
								"restaurants",
								"{{restaurant_id}}",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Comment was created and ID saved\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.comment).to.have.property('_id');\r",
									"    pm.environment.set(\"comment_id\", jsonData.data.comment._id);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userId\": \"testuser001\",\r\n  \"username\": \"John Doe\",\r\n  \"comment\": \"Great atmosphere and friendly staff!\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/restaurants/{{restaurant_id}}/comments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"{{api_version}}",
								"restaurants",
								"{{restaurant_id}}",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update comment",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"comment\": \"Updated comment: Absolutely loved the experience!\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/restaurants/{{restaurant_id}}/comments/{{comment_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"{{api_version}}",
								"restaurants",
								"{{restaurant_id}}",
								"comments",
								"{{comment_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete comment",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/restaurants/{{restaurant_id}}/comments/{{comment_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"{{api_version}}",
								"restaurants",
								"{{restaurant_id}}",
								"comments",
								"{{comment_id}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}