// Carga las variables de entorno del archivo .env
require('dotenv').config();

const { MongoClient } = require('mongodb');

// Obtiene la cadena de conexi√≥n de las variables de entorno
const uri = process.env.MONGODB_URI;

// Verifica si la URI existe
if (!uri) {
  console.error("‚ùå Error: No se encontr√≥ la variable MONGODB_URI en tu archivo .env");
  process.exit(1);
}

const client = new MongoClient(uri);

async function runTest() {
  console.log("Intentando conectar a MongoDB Atlas...");
  try {
    // Conectar el cliente al servidor
    await client.connect();
    // Confirmar la conexi√≥n haciendo un ping a la base de datos
    await client.db("admin").command({ ping: 1 });
    console.log("‚úÖ ¬°√âxito! Te conectaste correctamente a MongoDB Atlas.");
    console.log("‚úÖ Tu cadena de conexi√≥n en el archivo .env es correcta.");
  } catch (error) {
    console.error("‚ùå ¬°Fall√≥ la conexi√≥n a MongoDB Atlas!");
    console.error("   Aseg√∫rate de lo siguiente:");
    console.error("   1. La contrase√±a en tu archivo .env es correcta y no tiene caracteres especiales que necesiten ser codificados.");
    console.error("   2. Tu direcci√≥n IP actual est√° en la lista de acceso de red ('Network Access') en MongoDB Atlas (o est√° habilitado el acceso desde 0.0.0.0/0).");
    console.error("   3. El nombre del cl√∫ster y el usuario son correctos en la cadena de conexi√≥n.");
    // console.error("\nDetalles del error:", error); // Descomenta esta l√≠nea para ver el error completo
  } finally {
    // Asegura que el cliente se cerrar√° cuando termines/falles
    await client.close();
    console.log("üîå Conexi√≥n cerrada.");
  }
}

runTest();